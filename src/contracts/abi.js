"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SNORFLIKS_ABI = exports.UI_SNORFLIKS_ABI = void 0;
exports.UI_SNORFLIKS_ABI = [
    {
        type: 'constructor',
        inputs: [{ name: '_collection', type: 'address', internalType: 'address' }],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'COLLECTION',
        inputs: [],
        outputs: [
            { name: '', type: 'address', internalType: 'contract ISnorfliks' },
        ],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'getInfos',
        inputs: [],
        outputs: [
            {
                name: '',
                type: 'tuple[]',
                internalType: 'struct UiSnorfliks.Info[]',
                components: [
                    {
                        name: 'token',
                        type: 'tuple',
                        internalType: 'struct DataTypes.TokenInfo',
                        components: [
                            { name: 'exists', type: 'bool', internalType: 'bool' },
                            { name: 'cooldown', type: 'bool', internalType: 'bool' },
                            { name: 'safe', type: 'bool', internalType: 'bool' },
                            { name: 'rank', type: 'uint16', internalType: 'uint16' },
                            { name: 'receiveLimit', type: 'uint16', internalType: 'uint16' },
                            { name: 'ranksToAssign', type: 'uint16', internalType: 'uint16' },
                        ],
                    },
                    { name: 'owner', type: 'address', internalType: 'address' },
                    { name: 'id', type: 'uint256', internalType: 'uint256' },
                    { name: 'claims', type: 'uint256[4]', internalType: 'uint256[4]' },
                ],
            },
            { name: '', type: 'uint8', internalType: 'uint8' },
        ],
        stateMutability: 'view',
    },
];
exports.SNORFLIKS_ABI = [
    {
        type: 'constructor',
        inputs: [
            { name: '_lockTime', type: 'uint256', internalType: 'uint256' },
            { name: '_provenanceHash', type: 'bytes32', internalType: 'bytes32' },
            { name: '_cooldownExpiry', type: 'uint32', internalType: 'uint32' },
        ],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'COOLDOWN',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'DURATION',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'LOCK_TIME',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'MAX_BATCH_SIZE',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'MAX_PER_ADDRESS_MINT',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'MAX_SUPPLY',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'MINT_COST',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'PEACE_URI',
        inputs: [],
        outputs: [{ name: '', type: 'string', internalType: 'string' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'PROVENANCE_HASH',
        inputs: [],
        outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'PURGE_URI',
        inputs: [],
        outputs: [{ name: '', type: 'string', internalType: 'string' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'UPGRADE_COST',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'WITHDRAW_ADDRESS',
        inputs: [],
        outputs: [{ name: '', type: 'address', internalType: 'address' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'airdrop',
        inputs: [
            { name: 'receivers', type: 'address[]', internalType: 'address[]' },
        ],
        outputs: [],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'allocate',
        inputs: [
            { name: 'senderId', type: 'uint256', internalType: 'uint256' },
            { name: 'targetId', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'approve',
        inputs: [
            { name: 'to', type: 'address', internalType: 'address' },
            { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'balanceOf',
        inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'cancelOwnershipHandover',
        inputs: [],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'claim',
        inputs: [
            { name: 'senderId', type: 'uint256', internalType: 'uint256' },
            { name: 'targetId', type: 'uint256', internalType: 'uint256' },
            { name: 'nonce', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'completeOwnershipHandover',
        inputs: [
            { name: 'pendingOwner', type: 'address', internalType: 'address' },
        ],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'cooldownExpiry',
        inputs: [],
        outputs: [{ name: '', type: 'uint32', internalType: 'uint32' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'currentNonce',
        inputs: [],
        outputs: [{ name: '', type: 'uint8', internalType: 'uint8' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'donate',
        inputs: [
            { name: 'senderId', type: 'uint256', internalType: 'uint256' },
            { name: 'targetId', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'end',
        inputs: [],
        outputs: [{ name: '', type: 'uint32', internalType: 'uint32' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'getApproved',
        inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
        outputs: [{ name: '', type: 'address', internalType: 'address' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'getEligibleTokensCount',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'getMaxMintable',
        inputs: [{ name: 'user', type: 'address', internalType: 'address' }],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'getNumMinted',
        inputs: [{ name: 'user', type: 'address', internalType: 'address' }],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'getPhase',
        inputs: [],
        outputs: [
            { name: '', type: 'uint8', internalType: 'enum Snorfliks.Phase' },
        ],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'getPurgeCost',
        inputs: [
            { name: 'attackerId', type: 'uint256', internalType: 'uint256' },
            { name: 'targetId', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'getRanksToAssign',
        inputs: [
            { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
            { name: 'nonce', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'getTokenInfo',
        inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
        outputs: [
            {
                name: '',
                type: 'tuple',
                internalType: 'struct DataTypes.TokenInfo',
                components: [
                    { name: 'exists', type: 'bool', internalType: 'bool' },
                    { name: 'cooldown', type: 'bool', internalType: 'bool' },
                    { name: 'safe', type: 'bool', internalType: 'bool' },
                    { name: 'rank', type: 'uint16', internalType: 'uint16' },
                    { name: 'receiveLimit', type: 'uint16', internalType: 'uint16' },
                    { name: 'ranksToAssign', type: 'uint16', internalType: 'uint16' },
                ],
            },
        ],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'isApprovedForAll',
        inputs: [
            { name: 'owner', type: 'address', internalType: 'address' },
            { name: 'operator', type: 'address', internalType: 'address' },
        ],
        outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'mint',
        inputs: [{ name: 'amount', type: 'uint8', internalType: 'uint8' }],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'name',
        inputs: [],
        outputs: [{ name: '', type: 'string', internalType: 'string' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'owner',
        inputs: [],
        outputs: [{ name: 'result', type: 'address', internalType: 'address' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'ownerOf',
        inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
        outputs: [{ name: '', type: 'address', internalType: 'address' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'ownershipHandoverExpiresAt',
        inputs: [
            { name: 'pendingOwner', type: 'address', internalType: 'address' },
        ],
        outputs: [{ name: 'result', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'purge',
        inputs: [
            { name: 'senderId', type: 'uint256', internalType: 'uint256' },
            { name: 'targetId', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'renounceOwnership',
        inputs: [],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'requestOwnershipHandover',
        inputs: [],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'safeTransferFrom',
        inputs: [
            { name: 'from', type: 'address', internalType: 'address' },
            { name: 'to', type: 'address', internalType: 'address' },
            { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'safeTransferFrom',
        inputs: [
            { name: 'from', type: 'address', internalType: 'address' },
            { name: 'to', type: 'address', internalType: 'address' },
            { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
            { name: '_data', type: 'bytes', internalType: 'bytes' },
        ],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'setApprovalForAll',
        inputs: [
            { name: 'operator', type: 'address', internalType: 'address' },
            { name: 'approved', type: 'bool', internalType: 'bool' },
        ],
        outputs: [],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'setURI',
        inputs: [
            { name: 'peaceURI', type: 'string', internalType: 'string' },
            { name: 'purgeURI', type: 'string', internalType: 'string' },
        ],
        outputs: [],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'setWithdrawAddress',
        inputs: [
            { name: 'withdrawAddress', type: 'address', internalType: 'address' },
        ],
        outputs: [],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'start',
        inputs: [],
        outputs: [{ name: '', type: 'uint32', internalType: 'uint32' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'startPurge',
        inputs: [],
        outputs: [],
        stateMutability: 'nonpayable',
    },
    {
        type: 'function',
        name: 'supportsInterface',
        inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }],
        outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'symbol',
        inputs: [],
        outputs: [{ name: '', type: 'string', internalType: 'string' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'tokenURI',
        inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
        outputs: [{ name: '', type: 'string', internalType: 'string' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'totalMinted',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'totalSupply',
        inputs: [],
        outputs: [{ name: 'result', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'view',
    },
    {
        type: 'function',
        name: 'transferFrom',
        inputs: [
            { name: 'from', type: 'address', internalType: 'address' },
            { name: 'to', type: 'address', internalType: 'address' },
            { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'transferOwnership',
        inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'upgrade',
        inputs: [
            { name: 'index', type: 'uint256', internalType: 'uint256' },
            { name: 'amount', type: 'uint256', internalType: 'uint256' },
        ],
        outputs: [],
        stateMutability: 'payable',
    },
    {
        type: 'function',
        name: 'withdraw',
        inputs: [],
        outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
        stateMutability: 'nonpayable',
    },
    {
        type: 'event',
        name: 'Allocate',
        inputs: [
            {
                name: 'senderId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
            {
                name: 'targetId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
            {
                name: 'rank',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
            {
                name: 'amount',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'Approval',
        inputs: [
            {
                name: 'owner',
                type: 'address',
                indexed: true,
                internalType: 'address',
            },
            {
                name: 'approved',
                type: 'address',
                indexed: true,
                internalType: 'address',
            },
            {
                name: 'tokenId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'ApprovalForAll',
        inputs: [
            {
                name: 'owner',
                type: 'address',
                indexed: true,
                internalType: 'address',
            },
            {
                name: 'operator',
                type: 'address',
                indexed: true,
                internalType: 'address',
            },
            { name: 'approved', type: 'bool', indexed: false, internalType: 'bool' },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'Claim',
        inputs: [
            {
                name: 'senderId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
            {
                name: 'targetId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
            {
                name: 'rank',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
            {
                name: 'amount',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'ConsecutiveTransfer',
        inputs: [
            {
                name: 'fromTokenId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
            {
                name: 'toTokenId',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
            { name: 'from', type: 'address', indexed: true, internalType: 'address' },
            { name: 'to', type: 'address', indexed: true, internalType: 'address' },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'Donate',
        inputs: [
            {
                name: 'senderId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
            {
                name: 'targetId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
            {
                name: 'rank',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
            {
                name: 'amount',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'OwnershipHandoverCanceled',
        inputs: [
            {
                name: 'pendingOwner',
                type: 'address',
                indexed: true,
                internalType: 'address',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'OwnershipHandoverRequested',
        inputs: [
            {
                name: 'pendingOwner',
                type: 'address',
                indexed: true,
                internalType: 'address',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'OwnershipTransferred',
        inputs: [
            {
                name: 'oldOwner',
                type: 'address',
                indexed: true,
                internalType: 'address',
            },
            {
                name: 'newOwner',
                type: 'address',
                indexed: true,
                internalType: 'address',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'Purge',
        inputs: [
            {
                name: 'start',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
            { name: 'end', type: 'uint256', indexed: false, internalType: 'uint256' },
            {
                name: 'cooldownExpiry',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'Purged',
        inputs: [
            {
                name: 'senderId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
            {
                name: 'targetId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'Transfer',
        inputs: [
            { name: 'from', type: 'address', indexed: true, internalType: 'address' },
            { name: 'to', type: 'address', indexed: true, internalType: 'address' },
            {
                name: 'tokenId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'Upgrade',
        inputs: [
            {
                name: 'caller',
                type: 'address',
                indexed: true,
                internalType: 'address',
            },
            {
                name: 'tokenId',
                type: 'uint256',
                indexed: true,
                internalType: 'uint256',
            },
            {
                name: 'rank',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
            {
                name: 'amount',
                type: 'uint256',
                indexed: false,
                internalType: 'uint256',
            },
        ],
        anonymous: false,
    },
    { type: 'error', name: 'AlreadyInitialized', inputs: [] },
    { type: 'error', name: 'AlreadySet', inputs: [] },
    { type: 'error', name: 'ApprovalCallerNotOwnerNorApproved', inputs: [] },
    { type: 'error', name: 'ApprovalQueryForNonexistentToken', inputs: [] },
    { type: 'error', name: 'BalanceQueryForZeroAddress', inputs: [] },
    { type: 'error', name: 'MintERC2309QuantityExceedsLimit', inputs: [] },
    { type: 'error', name: 'MintToZeroAddress', inputs: [] },
    { type: 'error', name: 'MintZeroQuantity', inputs: [] },
    { type: 'error', name: 'NewOwnerIsZeroAddress', inputs: [] },
    { type: 'error', name: 'NoHandoverRequest', inputs: [] },
    { type: 'error', name: 'NotCompatibleWithSpotMints', inputs: [] },
    { type: 'error', name: 'OwnerQueryForNonexistentToken', inputs: [] },
    { type: 'error', name: 'OwnershipNotInitializedForExtraData', inputs: [] },
    { type: 'error', name: 'SequentialMintExceedsLimit', inputs: [] },
    { type: 'error', name: 'SequentialUpToTooSmall', inputs: [] },
    { type: 'error', name: 'Snorfliks_CannotAirdrop', inputs: [] },
    { type: 'error', name: 'Snorfliks_CooldownPeriod', inputs: [] },
    { type: 'error', name: 'Snorfliks_IdenticalIds', inputs: [] },
    { type: 'error', name: 'Snorfliks_InsufficientFunds', inputs: [] },
    { type: 'error', name: 'Snorfliks_InvalidIndex', inputs: [] },
    { type: 'error', name: 'Snorfliks_InvalidNonce', inputs: [] },
    { type: 'error', name: 'Snorfliks_InvalidSender', inputs: [] },
    { type: 'error', name: 'Snorfliks_InvalidTarget', inputs: [] },
    { type: 'error', name: 'Snorfliks_Locked', inputs: [] },
    { type: 'error', name: 'Snorfliks_MaxMintedForAddress', inputs: [] },
    { type: 'error', name: 'Snorfliks_NonexistentToken', inputs: [] },
    { type: 'error', name: 'Snorfliks_OnCooldown', inputs: [] },
    { type: 'error', name: 'Snorfliks_OnlyWithdrawer', inputs: [] },
    { type: 'error', name: 'Snorfliks_OverMaxSupply', inputs: [] },
    { type: 'error', name: 'Snorfliks_PurgeNotOn', inputs: [] },
    { type: 'error', name: 'Snorfliks_PurgeOn', inputs: [] },
    { type: 'error', name: 'Snorfliks_TargetSafe', inputs: [] },
    { type: 'error', name: 'Snorfliks_URISet', inputs: [] },
    { type: 'error', name: 'SpotMintTokenIdTooSmall', inputs: [] },
    { type: 'error', name: 'TokenAlreadyExists', inputs: [] },
    { type: 'error', name: 'TransferCallerNotOwnerNorApproved', inputs: [] },
    { type: 'error', name: 'TransferFailed', inputs: [] },
    { type: 'error', name: 'TransferFromIncorrectOwner', inputs: [] },
    { type: 'error', name: 'TransferToNonERC721ReceiverImplementer', inputs: [] },
    { type: 'error', name: 'TransferToZeroAddress', inputs: [] },
    { type: 'error', name: 'URIQueryForNonexistentToken', inputs: [] },
    { type: 'error', name: 'Unauthorized', inputs: [] },
    { type: 'error', name: 'Zero', inputs: [] },
];
